This file contains decisions made to resolve conflicts, in the order they
appeared.

Note: there is possibly a lot of git's automerge going on with the assembly
and they may need to be manually checked in the end, even if git is not
complaining about them.

- 2.6.39:
  * kernel/sched.c: removed prepare_task_switch
  * arch/x86/kernel/entry_64.S: .section was added by kernel, moved next to
    .code64 above PREEMPT_SCHEDULE_IRQ definition
  * arch/x86/kernel/dumpstack.c: die_nmi() has been removed by kernel
  ------
  * kernel/irq/chip.c: out label has been moved by the kernel.  The code that
    wasn't supposed to be run in RTAI is now under out_eoi label.
  * same file: desc->irq_data.chip->irq_ack has been changed to chip->irq_ack
    by the kernel.  #ifndef CONFIG_IPIPE now surrounds that code.
  * same file: chip_bus_lock() and raw_spin_lock_irqsave() have been removed
    by the kernel.  handle = __fixup_irq_handler() placed before
    /* Uninstall? */ comment as before.
  * include/linux/irq.h: set_irq_* functions have been renamed to irq_set_*
    by the kernel.  __attribute__((const)) added to irq_get_irq_data as done
    by RTAI.
  * arch/x86/kernel/apic/io_apic.c: move_native_irq() renamed to irq_move_irq()
    by the kernel.  #ifndef CONFIG_IPIPE correctly surrounds the function
  * same file: move_masked_irq() renamed to irq_move_masked_irq() by the kernel
  * arch/x86/include/asm/apicdef.h: #endif /* !__ASSEMBLY__ */ put above
    enum ioapic_irq_destination_types definition.
  ------
  * arch/x86/include/asm/irq_vectors.h: The kernel now doesn't use a fixed
    number for NUM_INVALIDATE_TLB_VECTORS.  Therefore, its maximum is dropped
    by 5 and the INVALIDATE_TLB_VECTOR_END + 1..5 are assigned to I-pipe.
  * arch/x86/kernel/irqinit.c: Consequently, there is no need for
    #ifndef CONFIG_IPIPE in smp_intr_init().
  * arch/x86/kernel/entry_64.S: Definition of idx changed to new 32 value form.
    If CONFIG_IPIPE is defined, it would go up to 26 instead of 31.
  * arch/x86/include/asm/entry_arch.h: Likewise.
  * arch/x86/kernel/apic/ipi.c: one case of local_irq_restore_hw was confused
    by git because previous function had changed parameters.
  ------
  * kernel/sched.c: release_kernel_log() removed by the kernel.
  ------
  * arch/x86/kvm/x86.c: local_irq_disable() removed by RTAI was confused by
    git because the following if had changed condition.
  ------
  * kernel/fork.c: new_mm case completely removed by the kernel.
  ------
  * include/linux/irqdesc.h: __fixup_irq_handler moved to correct function that
    was confused by git.
  ------
  * arch/x86/kernel/apic/apic.c: local_irq_restore_hw was confused by git
    because the following statment (return ret) had been removed.
  ------
  * include/linux/irqdesc.h: irq_desc struct has changed in the kernel.  The
    added ipipe callbacks are moved to the correct position in the struct.
  ++++++ Build error fixes
  * include/linux/irqdesc.h: __fixup_irq_handler forward declaration misplace
    fix
  * arch/x86/include/asm/apicdef.h: The #endif /* !__ASSEMBLY__ */ should have
    been put below the enum.
  * arch/x86/kernel/apic/io_apic.c: move_native_irq() have been renamed to
    irq_move_irq() by the kernel.
  * same file: move_masked_irq() has been replaced by irq_move_masked_irq()
    by the kernel.
  * same file: desc->status & IRQ_MOVE_PENDING has been replaced by
    irqd_is_setaffinity_pending() by the kernel.
  * arch/x86/kernel/ipipe.c: a lot of stuff has been migrated in the kernel
    from irq_desc to irq_data.  Many functions have also gotten irq_ prefix.
    Accordingly, used desc->irq_data. instead of desc-> when appropriate.
  * same file: irq_desc.status is moved to irq_data.state and IRQ_DISABLED
    is renamed IRQD_IRQ_DISABLED.  __ipipe_enable_irqdesc has been changed
    accordingly.
  * kernel/sched.c: check_class_changed doesn't get running anymore and
    everywhere it is moved out of if (on_rq).  Likewise, done in
    ipipe_setscheduler_root().
  * same file: the big kernel lock is apparently completely removed from the
    kernel.  As a result, the call to reacquire_kernel_lock() in
    ipipe_reenter_root has been just removed.
  * arch/x86/include/asm/ipipe.h: more of irq_desc to irq_data migration fixed.
  * arch/x86/kernel/ipipe.c, arch/x86/kernel/vsyscall_64.c,
    kernel/ipipe/core.c, include/linux/ipipe_tickdev.h: ipipe_update_hostrt
    now take struct timespect *wtm as parameter, instead of calling
    __get_wall_to_monotonic().
  * kernel/irq/chip.c: more of irq_desc to irq_data and using accessors.
  * same file: get_irq_desc_chip doesn't exist anymore.

2.6.39.4:
  * arch/x86/kernel/process_64.c: set_fs(USER_DS) removed by the kernel had
    confused git.
